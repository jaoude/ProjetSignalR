{"ast":null,"code":"class HttpClient {\n  post(body) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', \"http://localhost:5002/api/orders\"); // url est le lien pour le api\n\n    xhr.send(body); // Les donnees que l'on va envoyer\n\n    xhr.addEventListener('load', () => {\n      console.log(xhr.responseText); // reponse de la requete \n    });\n\n    if (xhr.status === 200) {\n      console.log('posted');\n    }\n  }\n\n  get() {\n    // create a new XMLHttpRequest\n    var xhr = new XMLHttpRequest(); // get a callback when the server responds\n\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      //console.log(xhr.responseText)\n      if (xhr.readyState === 4) {\n        localStorage.clear();\n\n        if (xhr.status === 200) {\n          var json_obj = JSON.parse(xhr.responseText);\n          localStorage.setItem(1, JSON.stringify(json_obj));\n        } else {\n          return xhr.statusText;\n        }\n      }\n    }); // open the request with the verb and the url, should enter the url given in the parameters\n\n    xhr.open('GET', \"http://localhost:5002/api/orders\");\n    xhr.send();\n\n    xhr.onload = function (e) {} //\t.bind(this);\n    //xhr.onerror = function (e) {\n    //console.error(xhr.statusText);\n    // send the request\n    ;\n  }\n\n  getStatusById(id) {\n    // create a new XMLHttpRequest\n    var xhr = new XMLHttpRequest(); // get a callback when the server responds\n\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      //console.log(xhr.responseText)\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          // var json_obj = JSON.parse(xhr.responseText);\n          localStorage.setItem(3, xhr.responseText);\n          return xhr.responseText;\n        } else {\n          console.error(xhr.statusText);\n        }\n      }\n    }); // open the request with the verb and the url, should enter the url given in the parameters\n\n    xhr.open('GET', \"http://localhost:5002/api/status/\" + id);\n    xhr.send();\n\n    xhr.onload = function (e) {} //\t.bind(this);\n    //xhr.onerror = function (e) {\n    //console.error(xhr.statusText);\n    // send the request\n    ;\n  }\n\n  getCoffeeById(id) {\n    // create a new XMLHttpRequest\n    var xhr = new XMLHttpRequest(); // get a callback when the server responds\n\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      //console.log(xhr.responseText)\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          localStorage.setItem(2, xhr.responseText);\n        } else {\n          console.error(xhr.statusText);\n        }\n      }\n    }); // open the request with the verb and the url, should enter the url given in the parameters\n\n    xhr.open('GET', \"http://localhost:5002/api/coffees/\" + id);\n    xhr.send();\n\n    xhr.onload = function (e) {} //\t.bind(this);\n    //xhr.onerror = function (e) {\n    //console.error(xhr.statusText);\n    // send the request\n    ;\n  }\n\n  getCoffeeByName(name) {\n    // create a new XMLHttpRequest\n    var xhr = new XMLHttpRequest(); // get a callback when the server responds\n\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      //console.log(xhr.responseText)\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          localStorage.setItem(4, xhr.responseText);\n        } else {\n          console.error(xhr.statusText);\n        }\n      }\n    }); // open the request with the verb and the url, should enter the url given in the parameters\n\n    xhr.open('GET', \"http://localhost:5002/api/coffees/\" + name);\n    xhr.send();\n\n    xhr.onload = function (e) {} //\t.bind(this);\n    //xhr.onerror = function (e) {\n    //console.error(xhr.statusText);\n    // send the request\n    ;\n  }\n\n}\n\nexport default HttpClient;","map":{"version":3,"sources":["C:/Users/PC/Desktop/projet/ProjetSignalR/InciCafe.Client/src/httpRequests.js"],"names":["HttpClient","post","body","xhr","XMLHttpRequest","open","send","addEventListener","console","log","responseText","status","get","readyState","localStorage","clear","json_obj","JSON","parse","setItem","stringify","statusText","onload","e","getStatusById","id","error","getCoffeeById","getCoffeeByName","name"],"mappings":"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","sourcesContent":["class HttpClient {\r\n\t\r\n\tpost(body) {\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('POST', \"http://localhost:5002/api/orders\"); // url est le lien pour le api\r\n\t\txhr.send(body); // Les donnees que l'on va envoyer\r\n\t\txhr.addEventListener('load', () => {\r\n\t\t\tconsole.log(xhr.responseText);// reponse de la requete \r\n\t\t})\r\n\t\tif (xhr.status === 200)\r\n\t\t{\r\n\t\t\tconsole.log('posted');\r\n\t\t}\r\n\t}\r\n\r\n\tget() {\r\n\t\t// create a new XMLHttpRequest\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\t// get a callback when the server responds\r\n\t\txhr.addEventListener('load', () => {\r\n\t\t\t// update the state of the component with the result here\r\n\t\t\t//console.log(xhr.responseText)\r\n\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\tlocalStorage.clear();\r\n\t\t\t\tif (xhr.status === 200) {\r\n\t\t\t\t  var json_obj = JSON.parse(xhr.responseText);\r\n\t\t\t\t  \r\n\t\t\t\t localStorage.setItem(1,JSON.stringify(json_obj));\r\n\t\t\t\t  \r\n\t\t\t\t \r\n\t\t\t\t} else {\r\n\t\t\t\t return xhr.statusText;\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t})\r\n\t\t// open the request with the verb and the url, should enter the url given in the parameters\r\n\t\txhr.open('GET', \"http://localhost:5002/api/orders\")\r\n\t\txhr.send();\r\n\t\txhr.onload = function(e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\t//\t.bind(this);\r\n\t\t\t  //xhr.onerror = function (e) {\r\n\t\t\t\t//console.error(xhr.statusText);\r\n\t\t\t  \r\n\t\t}\r\n\t\t// send the request\r\n\t\t\r\n\r\n\t}\r\n\tgetStatusById(id) {\r\n\t\t// create a new XMLHttpRequest\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\t// get a callback when the server responds\r\n\t\txhr.addEventListener('load', () => {\r\n\t\t\t// update the state of the component with the result here\r\n\t\t\t//console.log(xhr.responseText)\r\n\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\tif (xhr.status === 200) {\r\n\t\t\t\t // var json_obj = JSON.parse(xhr.responseText);\r\n\t\t\t\t localStorage.setItem(3,xhr.responseText)\r\n\t\t\t\t  \r\n\t\t\t\t return xhr.responseText\r\n\t\t\t\t} else {\r\n\t\t\t\t  console.error(xhr.statusText);\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t})\r\n\t\t// open the request with the verb and the url, should enter the url given in the parameters\r\n\t\txhr.open('GET', \"http://localhost:5002/api/status/\"+id)\r\n\t\txhr.send();\r\n\t\txhr.onload = function(e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\t//\t.bind(this);\r\n\t\t\t  //xhr.onerror = function (e) {\r\n\t\t\t\t//console.error(xhr.statusText);\r\n\t\t\t  \r\n\t\t}\r\n\t\t// send the request\r\n\t\t\r\n\r\n\t}\r\n\tgetCoffeeById(id) {\r\n\t\t// create a new XMLHttpRequest\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\t// get a callback when the server responds\r\n\t\txhr.addEventListener('load', () => {\r\n\t\t\t// update the state of the component with the result here\r\n\t\t\t//console.log(xhr.responseText)\r\n\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\tif (xhr.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t  localStorage.setItem(2,xhr.responseText) \r\n\t\t\t\t} else {\r\n\t\t\t\t  console.error(xhr.statusText);\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t})\r\n\t\t// open the request with the verb and the url, should enter the url given in the parameters\r\n\t\txhr.open('GET', \"http://localhost:5002/api/coffees/\"+id)\r\n\t\txhr.send();\r\n\t\txhr.onload = function(e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\t//\t.bind(this);\r\n\t\t\t  //xhr.onerror = function (e) {\r\n\t\t\t\t//console.error(xhr.statusText);\r\n\t\t\t  \r\n\t\t}\r\n\t\t// send the request\r\n\t\t\r\n\r\n\t}\r\n\tgetCoffeeByName(name) {\r\n\t\t// create a new XMLHttpRequest\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\t// get a callback when the server responds\r\n\t\txhr.addEventListener('load', () => {\r\n\t\t\t// update the state of the component with the result here\r\n\t\t\t//console.log(xhr.responseText)\r\n\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\tif (xhr.status === 200) {\r\n\t\t\t\t  localStorage.setItem(4,xhr.responseText)\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t} else {\r\n\t\t\t\t  console.error(xhr.statusText);\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t})\r\n\t\t// open the request with the verb and the url, should enter the url given in the parameters\r\n\t\txhr.open('GET', \"http://localhost:5002/api/coffees/\"+name)\r\n\t\txhr.send();\r\n\t\txhr.onload = function(e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\t//\t.bind(this);\r\n\t\t\t  //xhr.onerror = function (e) {\r\n\t\t\t\t//console.error(xhr.statusText);\r\n\t\t\t  \r\n\t\t}\r\n\t\t// send the request\r\n\t\t\r\n\r\n\t}\r\n}\r\nexport default HttpClient;"]},"metadata":{},"sourceType":"module"}